{"version":3,"sources":["config/fbConfig.js","components/layout/SignedinLinks.js","store/actions/authActions.js","components/layout/SignedoutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampsInSnapshots","connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","SignedinLinks","SignedoutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","React","Component","compose","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.340ed07b.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyADRhpS_Sl4YRa2AtFqU6sVogfSTTnSj1E\",\r\n    authDomain: \"marioplan-56225.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-56225.firebaseio.com\",\r\n    projectId: \"marioplan-56225\",\r\n    storageBucket: \"marioplan-56225.appspot.com\",\r\n    messagingSenderId: \"965567589502\",\r\n    appId: \"1:965567589502:web:7b44acf8a73a0b3b663c2f\",\r\n    measurementId: \"G-TFN8L6DEEK\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect}  from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n       <ul className=\"right\">\r\n        <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) =>{\r\n    return {\r\n        signOut:() => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn =(credentials) =>{\r\n    return (dispatch ,getState,{getFirebase}) =>{\r\n        const firebase =getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'});\r\n        }).catch((err) =>{\r\n            dispatch({type:'LOGIN_ERROR',err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch,getState,{getFirebase}) => {\r\n        const firebase =getFirebase();\r\n\r\n         firebase.auth().signOut().then(() => {\r\n             dispatch({type:'SIGNOUT_SUCCESS'})\r\n         })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR',err});\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n       <ul className=\"right\">\r\n        <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n        <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport SignedinLinks from './SignedinLinks';\r\nimport SignedoutLinks from './SignedoutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const {auth,profile} =props;\r\n    const links = auth.uid? <SignedinLinks profile={profile}/>:<SignedoutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                    <Link to=\"/\"  className=\"brand-logo\">Let's Plan</Link>\r\n                    {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStatetoProps =(state)=>{\r\n    console.log(state)\r\n     return{\r\n         auth:state.firebase.auth,\r\n         profile:state.firebase.profile\r\n     }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notification\">\r\n            {notifications && notifications.map(item => (\r\n              <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"grey-text note-date\">\r\n                  {moment(item.time.toDate()).fromNow()}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary =  ({project}) =>{\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n            <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom'\r\nconst ProjectList =({projects}) =>{\r\n    return (\r\n\r\n        <div className=\"project-list section\">\r\n          {projects && projects.map (project =>{\r\n               return(\r\n                  <Link to={'/project/'+project.id}> <ProjectSummary project ={project} key={project.id}/></Link>\r\n               )\r\n          })}\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends React.Component{\r\n    render()\r\n    {    const  {projects,auth,notifications}  =this.props;\r\n         if(!auth.uid) {\r\n            return <Redirect to='/signin'/>\r\n         } \r\n        return(\r\n            <div className=\"dashboard container \">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\"> <ProjectList projects={projects} /> </div>\r\n                        <div className=\" col s12 m5 offset-m1\">\r\n                                <Notifications notifications={notifications}/>\r\n                         </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps =(state) =>{\r\n    console.log(state);\r\n    return{\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps),\r\n    firestoreConnect([\r\n      { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n      { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\r\n    ]),\r\n  )(Dashboard);","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction ProjectDetails(props) {\r\n    const {project,auth} =props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n    if(project) {\r\n        return(<div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName}  {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n        </div>\r\n        </div>\r\n        )}else\r\n    return (\r\n      <div className=\"container center\">\r\n          <p>Loading Project...</p>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStatetoProps =(state, ownProps) =>{\r\n    const id=ownProps.match.params.id;\r\n    const projects=state.firestore.data.projects;\r\n    const project =projects ? projects[id]: null\r\n    return {\r\n        project:project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../store/actions/authActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n   state={\r\n       email:'',\r\n       password:''\r\n   }\r\n\r\n  handleChange= (e) =>{\r\n      this.setState({\r\n            [e.target.id] : e.target.value\r\n      })\r\n  }\r\n\r\n  handleSubmit= (e) =>{\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n}\r\n    render() {\r\n        const {authError,auth}=this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container white\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id =\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id =\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                       <button className=\"btn pink lighten-1 z-depth-0\">LOGIN</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                             {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        signIn:(creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state) =>{\r\n    return {\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authActions'\r\nclass SignUp extends Component {\r\n   state={\r\n       email:'',\r\n       password:'',\r\n       firstName:'',\r\n       lastName:''\r\n   }\r\n\r\n  handleChange= (e) =>{\r\n      this.setState({\r\n            [e.target.id] : e.target.value\r\n      })\r\n  }\r\n\r\n  handleSubmit= (e) =>{\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n}\r\n    render() {\r\n        const {auth,authError}=this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container white\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id =\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id =\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id =\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id =\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                       <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                       <div className=\"center red-text\">\r\n                         { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state) =>{\r\n    return {\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signUp:(newUser) =>dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n   state={\r\n       title:'',\r\n       content:''\r\n   }\r\n\r\n  handleChange= (e) =>{\r\n      this.setState({\r\n            [e.target.id] : e.target.value\r\n      })\r\n  }\r\n\r\n  handleSubmit= (e) =>{\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n}\r\n    render() {\r\n        const {auth} =this.props;\r\n        if(!auth.uid) {return <Redirect to='/signin'/>}\r\n        return (\r\n            <div className=\"container white\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Project Title</label>\r\n                        <input type=\"text\" id =\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\"  onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                       <button className=\"btn pink lighten-1 z-depth-0\">Create Project</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps =(state) =>{\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n    return{\r\n        createProject : (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(CreateProject);\r\n","export const createProject =(project) =>{\r\n    return (dispatch,getState,{getFirebase,getFirestore}) => {\r\n        //make async call to DB\r\n        const firestore= getFirestore();\r\n        const profile= getState().firebase.profile;\r\n        const authorId=getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt:new Date()\r\n        }).then(()=> {\r\n            dispatch({type:'CREATE_PROJECT' ,project:project});\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err});\r\n        })\r\n        \r\n    }\r\n};","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nclass App extends React.Component{\n  render()\n  {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n       <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard}></Route>\n        <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n        <Route path=\"/signin\" component={SignIn}></Route>\n        <Route path=\"/signup\" component={SignUp}></Route>\n        <Route path=\"/create\" component={CreateProject}></Route>\n      </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\r\n  authError:null\r\n}\r\n\r\nconst authReducer=(state=initState , action) => {\r\n switch(action.type){\r\n   case 'LOGIN_ERROR':\r\n    console.log('login error')\r\n     return {\r\n       ...state,\r\n       authError:'Login failed'\r\n     }\r\n\r\n  case 'LOGIN_SUCCESS':\r\n    console.log('login success');\r\n    return {\r\n      ...state,\r\n      authError:null\r\n    }\r\n\r\n\r\n  case 'SIGNOUT_SUCCESS':\r\n    console.log('signout success');\r\n    return state;\r\n    \r\n  case 'SIGNUP_SUCCESS':\r\n    console.log('signup success');\r\n    return{\r\n      ...state,\r\n      authError:null\r\n    }\r\n\r\n  case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return{\r\n        ...state,\r\n        authError:action.err.message\r\n      }\r\n      \r\n  default:return state;\r\n }\r\n \r\n}\r\n\r\nexport default authReducer;","\r\nconst initState={\r\n    projects:[\r\n        {id:'1', title:'PROJECT 1' ,content:'blah blah blah'},\r\n        {id:'2', title:'PROJECT 2' ,content:'blah blah blah'},\r\n        {id:'3', title:'PROJECT 3' ,content:'blah blah blah'},\r\n    ]\r\n}\r\n\r\nconst projectReducer=(state=initState , action) => {\r\n  switch(action.type){\r\n    case 'CREATE_PROJECT':console.log('project created' ,action.project);\r\n    return state;\r\n\r\n    case 'CREATE_PROJECT_ERROR':console.log('create_project_error',action.err);\r\n    return state;\r\n\r\n    default :return state;\r\n  }\r\n  \r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers}  from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\nconst rootReducer = combineReducers(\r\n    {\r\n        auth:authReducer,\r\n        project:projectReducer,\r\n        firestore:firestoreReducer,\r\n        firebase:firebaseReducer\r\n    }\r\n)\r\n\r\n\r\nexport default rootReducer;","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from './config/fbConfig';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './store/reducer/rootReducer';\n\n// We enhance compose in order to use Redux DevTools extension\n// https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\nconst rrfConfig = {\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  userProfile: 'users',\n  attachAuthIsReady: true,\n};\n\nconst store = createStore(rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase) // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n  ));\n\n  \n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nconsole.log('store', store);\nconsole.log('state', store.getState());\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}